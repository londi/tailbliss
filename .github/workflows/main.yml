# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  #schedule:
  #  - cron:  '0 0,6 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.111.3
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded    
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: NPM Install
        run: npm install
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
#      - name: Build TinaCMS
#        env:
#          TINA_PUBLIC_CLIENT_ID: ${{ secrets.TINA_CLIENT_ID }}
#          TINA_TOKEN: ${{ secrets.TINE_TOKEN }}
#        run: npx tinacms build
      - name: remove gitignore of admin folder in static
        run: rm -f ./static/admin/.gitignore
      - name: update hugo modules
        run: hugo mod get -u
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL https://leonluethi.com/          
      - name: remove gitignore of admin folder in static
        run: rm -f ./static/admin/.gitignore
      - name: Install Git
        run: sudo apt-get update && sudo apt-get install -y git
      - name: Configure Git
        run: |
          git config --global user.name "Leon Luethi"
          git config --global user.email "info@leonluethi.com"
      - name: remove all git dirs
        run: |
          find . -type d -name '.git' -exec rm -rf {} +
      - name: Clone repo and override files
        run: |
          git clone -b main ${{secrets.GIT_REMOTE_URL}} metanet
          cd ./metanet
          #git reset .
          #git rm -rf .
          #git rm -rf --cached .
          #git reset .
          #git clean -fxd
          #echo $(ls -la)
          #echo "cp"
          cp -a ../public/. .
          #echo $(ls -la)
          echo $(git status --porcelain)
          #git rm -rf --cached .
          
          
      - name: Check for changes
        run: |
          cd metanet
          git branch --set-upstream-to origin/main
          if [[ $(git status --porcelain) ]]; then
            echo "There are changes."
            echo $(git status)
            echo "git add --all ."
            git add .
            echo $(git status)
            git commit -m "build-${{ github.run_id }}-${{ github.run_attempt }}"
            git push ${{secrets.GIT_REMOTE_URL}} main
          else
            echo "No changes to push."
            exit 0
          fi
          

          




